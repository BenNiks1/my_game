const canvas=document.getElementById("myGame"),ctx=canvas.getContext("2d"),canvasScore=document.querySelector(".canvas__score");class MyGame{constructor(e,t,s){this.canvas=e,this.ctx=t,this.func=s,this.play=setInterval(this.func,10),this.speed=15,this.score=0,this.life=0,this.x=this.canvas.width-20,this.y=this.canvas.height,this.start=!1,this.pause=!0,this.collisionHandler=!1,this.userName="",this.key=new Date,this.color="rgb(117, 117, 117)"}startGame(){const e=document.querySelector(".canvas__form");this.pause&&clearInterval(this.play),e.onsubmit=e=>{e.preventDefault(),this.play=setInterval(this.func,50);const t=document.querySelector(".canvas__input"),s=document.querySelector(".canvas__form");this.userName=t.value,s.classList.remove("active")}}collision(e,t){t.x+t.width>=e.playerX&&t.x+t.width<=e.playerX+e.width&&t.y>=e.playerY&&t.y-t.height+10<=e.playerY-e.jumpHeight+e.height&&(this.collisionHandler=!0,this.collisionHandler&&(this.collisionHandler=!1,this.life=this.life-.1,this.color="red",setTimeout(()=>{this.color="rgb(117, 117, 117)",this.life=Math.floor(this.life)},100))),t.x+t.width>=e.playerX&&t.x<=e.playerX&&(this.score=this.score+1/3*10,setTimeout(()=>{this.score=Math.round(this.score)},100))}drawBackground(){const e=new Image;e.src="./img/bg1.png",this.ctx.drawImage(e,0,0,1480,520)}drawScore(){this.ctx.font="16px Arial",this.ctx.fillStyle="#fff",this.ctx.fillText("Score: "+this.score,8,20)}drawLife(){const e=new Image,t=new Image;switch(e.src="./img/hearts_hud.png",t.src="./img/no_hearts_hud.png",this.life){case 0:this.ctx.drawImage(e,10,40,25,25),this.ctx.drawImage(e,40,40,25,25),this.ctx.drawImage(e,70,40,25,25);case-1:this.ctx.drawImage(e,10,40,25,25),this.ctx.drawImage(e,40,40,25,25),this.ctx.drawImage(t,70,40,25,25);case-2:this.ctx.drawImage(e,10,40,25,25),this.ctx.drawImage(t,40,40,25,25),this.ctx.drawImage(t,70,40,25,25);case-3:this.ctx.drawImage(t,10,40,25,25),this.ctx.drawImage(t,40,40,25,25),this.ctx.drawImage(t,70,40,25,25)}}}class Player extends MyGame{constructor(){super(canvas,ctx),this.canvas=canvas,this.ctx=ctx,this.width=50,this.height=70,this.jumpCount=0,this.jumpLength=20,this.jumpHeight=0,this.upPressed=!1,this.downPressed=!1,this.playerX=(this.canvas.width-this.width)/5,this.playerY=this.canvas.height-this.height,this.img=new Image,this.numColumns=8,this.numRows=1,this.frameWidth=2e3/this.numColumns,this.frameHeight=98/this.numRows,this.currentFrame=0}drawPlayer(){this.img.src="./img/hero/newPlayer.png",this.currentFrame++;let e=this.numColumns*this.numRows-1;this.currentFrame>e&&(this.currentFrame=0);let t=this.currentFrame%this.numColumns,s=Math.floor(this.currentFrame/this.numColumns);this.upPressed&&(this.img.src="./img/hero/Jump.png",this.jumpCount++,this.jumpHeight=5*this.jumpLength*Math.sin(Math.PI*this.jumpCount/this.jumpLength)),this.jumpCount>this.jumpLength&&(this.jumpCount=0,this.upPressed=!1,this.jumpHeight=0),this.ctx.drawImage(this.img,t*this.frameWidth,s*this.frameHeight,this.frameWidth,this.frameHeight,this.playerX,this.playerY-this.jumpHeight,this.frameWidth,this.frameHeight)}sitDown(){this.downPressed&&!this.upPressed?(this.img.src="./img/hero/sitdown.png",this.playerY=this.canvas.height-this.height):(this.height=70,this.playerY=this.canvas.height-this.height)}}class Barrier extends MyGame{constructor(e,t,s){super(canvas,ctx),this.canvas=canvas,this.ctx=ctx,this.width=20,this.height=20,this.x=this.canvas.width+20,this.y=this.canvas.height-e,this.color=t,this.img=new Image,this.imgSrc=s,this.numColumns=8,this.numRows=1,this.frameWidth=128/this.numColumns,this.frameHeight=16/this.numRows,this.currentFrame=0}drawBarrier(){this.img.src=this.imgSrc,this.currentFrame++;let e=this.numColumns*this.numRows-1;this.currentFrame>e&&(this.currentFrame=0);let t=this.currentFrame%this.numColumns,s=Math.floor(this.currentFrame/this.numColumns);this.ctx.drawImage(this.img,t*this.frameWidth,s*this.frameHeight,this.frameWidth,this.frameHeight,this.x,this.y,this.width,this.height)}}const keyDownHandler=e=>{38==e.keyCode&&(player.upPressed=!0),40==e.keyCode&&(player.downPressed=!0),27==e.keyCode&&(myGame.pause=!0,clearInterval(myGame.play)),13==e.keyCode&&(myGame.pause=!1),32==e.keyCode&&(myGame.pause=!myGame.pause,myGame.pause||(myGame.play=setInterval(draw,50)))},keyUpHandler=e=>{40==e.keyCode&&(player.downPressed=!1)},addUserScore=()=>{canvasScore.classList.add("active");const e=JSON.parse(localStorage.getItem("result")||"[]"),t={name:myGame.userName,score:10*Math.floor(myGame.score/4),key:myGame.key};e.push(t);var s;e.sort((s="score",(e,t)=>e[s]>t[s]?-1:1)),localStorage.setItem("result",JSON.stringify(e)),e.forEach((e,t)=>{const s=document.querySelector(".canvas__score-inner"),i=document.createElement("p");t<10&&(i.innerHTML=`${t+1}. ${e.name} - ${e.score}`),t>=10&&e.key==myGame.key&&(i.innerHTML+=`...</br>${t+1}. ${e.name} - ${e.score}`),s.appendChild(i)})},move=e=>{e.x-=myGame.speed,e.x<=0&&(e.x=Math.floor(1800*Math.random()+1500)),barrier.x+barrier.width+200>=barrier2.x&&barrier.x-200<=barrier2.x+barrier2.width&&(barrier.x+=300)},draw=()=>{ctx.clearRect(0,0,canvas.width,canvas.height),myGame.startGame(),player.drawPlayer(),player.sitDown(),barrier.drawBarrier(),barrier2.drawBarrier(),move(barrier),move(barrier2),myGame.drawScore(),myGame.drawLife(),myGame.collision(player,barrier),myGame.collision(player,barrier2)},myGame=new MyGame(canvas,ctx,draw),barrier=new Barrier(20,"#fac","./img/enemy/1/enemy.png"),barrier2=new Barrier(70,"red","./img/enemy/1/enemy.png"),player=new Player;document.addEventListener("keydown",keyDownHandler),document.addEventListener("keyup",keyUpHandler);