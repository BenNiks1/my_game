const canvas=document.getElementById("myGame"),ctx=canvas.getContext("2d"),canvasScore=document.querySelector(".canvas__score");class MyGame{constructor(e,t,s){this.canvas=e,this.ctx=t,this.func=s,this.play=setInterval(this.func,10),this.speed=7,this.score=0,this.life=0,this.x=this.canvas.width-20,this.y=this.canvas.height,this.start=!1,this.pause=!0,this.userName="",this.key=new Date}startGame(){const e=document.querySelector(".canvas__submit");this.pause&&clearInterval(this.play),e.onclick=e=>{e.preventDefault();const t=document.querySelector(".canvas__input"),s=document.querySelector(".canvas__form");this.userName=t.value,s.classList.remove("active"),console.log(new Date)}}collision(e,t){t.x+t.width>=e.playerX&&t.x+t.width<=e.playerX+e.width&&t.y>=e.playerY&&t.y-t.height+10<=e.playerY-e.jumpHeight+e.height?this.life=this.life-.1:t.x+t.width>=e.playerX&&t.x<=e.playerX&&this.score++}drawScore(){this.ctx.font="16px Arial",this.ctx.fillStyle="#000",this.ctx.fillText("Score: "+10*Math.floor(this.score/4),8,20)}drawLife(){this.ctx.font="16px Arial",this.ctx.fillStyle="#000",this.ctx.fillText("Life: "+Math.round(this.life+3),8,40)}}class Player extends MyGame{constructor(){super(canvas,ctx),this.canvas=canvas,this.ctx=ctx,this.width=50,this.height=70,this.jumpCount=0,this.jumpLength=35,this.jumpHeight=0,this.upPressed=!1,this.downPressed=!1,this.playerX=(this.canvas.width-this.width)/5,this.playerY=this.canvas.height-this.height}jump(){this.upPressed&&(this.jumpCount++,this.jumpHeight=2*this.jumpLength*Math.sin(Math.PI*this.jumpCount/this.jumpLength)),this.jumpCount>this.jumpLength&&(this.jumpCount=0,this.upPressed=!1,this.jumpHeight=0),this.status=!0}sitDown(){this.downPressed?(this.height=30,this.playerY=this.canvas.height-this.height):(this.height=70,this.playerY=this.canvas.height-this.height)}drawPlayer(){this.ctx.beginPath(),this.ctx.rect(this.playerX,this.playerY-this.jumpHeight,this.width,this.height),this.ctx.fillStyle="#000",this.ctx.fill(),this.ctx.closePath()}}class Barrier extends MyGame{constructor(e,t){super(canvas,ctx),this.canvas=canvas,this.ctx=ctx,this.width=20,this.height=20,this.x=Math.round(320*Math.random()+1080),this.y=this.canvas.height-e,this.color=t}drawBarrier(){this.ctx.beginPath(),this.ctx.rect(this.x,this.y,this.width,this.height),this.ctx.fillStyle=this.color,this.ctx.fill(),this.ctx.closePath()}move(e){this.x-=this.speed,e.x<=0&&(e.x=Math.round(320*Math.random()+1080))}}const keyDownHandler=e=>{38==e.keyCode&&(player.upPressed=!0),40==e.keyCode&&(player.downPressed=!0),27==e.keyCode&&(myGame.pause=!0,clearInterval(myGame.play)),13==e.keyCode&&(myGame.pause=!1,myGame.play=setInterval(draw,10)),32==e.keyCode&&(myGame.pause=!myGame.pause,myGame.pause||(myGame.play=setInterval(draw,10)))},keyUpHandler=e=>{40==e.keyCode&&(player.downPressed=!1)},addUserScore=()=>{canvasScore.classList.add("active");const e=JSON.parse(localStorage.getItem("result")||"[]"),t={name:myGame.userName,score:10*Math.floor(myGame.score/4),key:myGame.key};e.push(t);var s;e.sort((s="score",(e,t)=>e[s]>t[s]?-1:1)),localStorage.setItem("result",JSON.stringify(e)),e.forEach((e,t)=>{const s=document.querySelector(".canvas__score-inner"),a=document.createElement("p");t<10&&(a.innerHTML=`${t+1}. ${e.name} - ${e.score}`),t>=10&&e.key==myGame.key&&(a.innerHTML+=`...</br>${t+1}. ${e.name} - ${e.score}`),s.appendChild(a)})},draw=()=>{ctx.clearRect(0,0,canvas.width,canvas.height),myGame.startGame(),player.drawPlayer(),player.jump(),player.sitDown(),barrier.drawBarrier(),barrier2.drawBarrier(),myGame.drawScore(),myGame.drawLife(),barrier.move(barrier),barrier2.move(barrier2),myGame.collision(player,barrier),myGame.collision(player,barrier2),myGame.life<=-3&&(clearInterval(myGame.play),addUserScore())},myGame=new MyGame(canvas,ctx,draw),barrier=new Barrier(20,"#fac"),barrier2=new Barrier(70,"red"),player=new Player;document.addEventListener("keydown",keyDownHandler),document.addEventListener("keyup",keyUpHandler);
