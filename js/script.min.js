const canvas=document.getElementById("myGame"),ctx=canvas.getContext("2d"),canvasScore=document.querySelector(".canvas__score");class MyGame{constructor(t,e,s){this.canvas=t,this.ctx=e,this.func=s,this.play=setInterval(this.func,10),this.speed=7,this.score=0,this.life=0,this.x=this.canvas.width-20,this.y=this.canvas.height,this.start=!1,this.pause=!0,this.collisionHandler=!1,this.userName="",this.key=new Date}startGame(){const t=document.querySelector(".canvas__submit");this.pause&&clearInterval(this.play),t.onclick=t=>{t.preventDefault(),this.play=setInterval(this.func,10);const e=document.querySelector(".canvas__input"),s=document.querySelector(".canvas__form");this.userName=e.value,s.classList.remove("active")}}collision(t,e){e.x+e.width>=t.playerX&&e.x+e.width<=t.playerX+t.width&&e.y>=t.playerY&&e.y-e.height+10<=t.playerY-t.jumpHeight+t.height?(this.life--,this.collisionHandler=!0):e.x+e.width>=t.playerX&&e.x<=t.playerX&&this.score++}drawScore(){this.ctx.font="16px Arial",this.ctx.fillStyle="#000",this.ctx.fillText("Score: "+10*Math.floor(this.score/4),8,20)}drawLife(){this.ctx.font="16px Arial",this.ctx.fillStyle="#000",this.ctx.fillText("Life: "+this.life,8,40)}}class Player extends MyGame{constructor(){super(canvas,ctx),this.canvas=canvas,this.ctx=ctx,this.width=50,this.height=70,this.jumpCount=0,this.jumpLength=35,this.jumpHeight=0,this.upPressed=!1,this.downPressed=!1,this.color="#000",this.playerX=(this.canvas.width-this.width)/5,this.playerY=this.canvas.height-this.height}jump(){this.upPressed&&(this.jumpCount++,this.jumpHeight=2*this.jumpLength*Math.sin(Math.PI*this.jumpCount/this.jumpLength)),this.jumpCount>this.jumpLength&&(this.jumpCount=0,this.upPressed=!1,this.jumpHeight=0),this.status=!0}sitDown(){this.downPressed&&!this.upPressed?(this.height=30,this.playerY=this.canvas.height-this.height):(this.height=70,this.playerY=this.canvas.height-this.height)}drawPlayer(){this.ctx.beginPath(),this.ctx.rect(this.playerX,this.playerY-this.jumpHeight,this.width,this.height),this.ctx.fillStyle=this.color,myGame.collisionHandler&&(this.color="red",myGame.collisionHandler=!1,setTimeout(()=>{this.color="#000"},100)),this.ctx.fill(),this.ctx.closePath()}}class Barrier extends MyGame{constructor(t,e,s,i){super(canvas,ctx),this.canvas=canvas,this.ctx=ctx,this.width=20,this.height=20,this.maxWidth=i,this.minWidth=s,this.x=Math.round(Math.random()*(this.maxWidth-this.minWidth)+this.minWidth),this.y=this.canvas.height-t,this.color=e}drawBarrier(){this.ctx.beginPath(),this.ctx.rect(this.x,this.y,this.width,this.height),this.ctx.fillStyle=this.color,this.ctx.fill(),this.ctx.closePath()}move(t){this.x-=this.speed,t.x<=0&&(t.x=Math.round(Math.random()*(this.maxWidth-this.minWidth)+this.minWidth))}}const keyDownHandler=t=>{38==t.keyCode&&(player.upPressed=!0),40==t.keyCode&&(player.downPressed=!0),27==t.keyCode&&(myGame.pause=!0,clearInterval(myGame.play)),13==t.keyCode&&(myGame.pause=!1),32==t.keyCode&&(myGame.pause=!myGame.pause,myGame.pause||(myGame.play=setInterval(draw,10)))},keyUpHandler=t=>{40==t.keyCode&&(player.downPressed=!1)},addUserScore=()=>{canvasScore.classList.add("active");const t=JSON.parse(localStorage.getItem("result")||"[]"),e={name:myGame.userName,score:10*Math.floor(myGame.score/4),key:myGame.key};t.push(e);var s;t.sort((s="score",(t,e)=>t[s]>e[s]?-1:1)),localStorage.setItem("result",JSON.stringify(t)),t.forEach((t,e)=>{const s=document.querySelector(".canvas__score-inner"),i=document.createElement("p");e<10&&(i.innerHTML=`${e+1}. ${t.name} - ${t.score}`),e>=10&&t.key==myGame.key&&(i.innerHTML+=`...</br>${e+1}. ${t.name} - ${t.score}`),s.appendChild(i)})},draw=()=>{ctx.clearRect(0,0,canvas.width,canvas.height),myGame.startGame(),player.drawPlayer(),player.jump(),player.sitDown(),barrier.drawBarrier(),barrier2.drawBarrier(),myGame.drawScore(),myGame.drawLife(),barrier.move(barrier),barrier2.move(barrier2),myGame.collision(player,barrier),myGame.collision(player,barrier2)},myGame=new MyGame(canvas,ctx,draw),barrier=new Barrier(20,"#fac",1480,1600),barrier2=new Barrier(70,"red",1900,2e3),player=new Player;document.addEventListener("keydown",keyDownHandler),document.addEventListener("keyup",keyUpHandler);
